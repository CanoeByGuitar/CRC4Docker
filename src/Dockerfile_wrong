# x86 architecture 
FROM     debian:jessie  
           
MAINTAINER Mort Canty "mort.canty@gmail.com"

RUN rm -rf /var/lib/apt/lists/partial

RUN apt-get update && apt-get install -y --no-install-recommends \
    python \
    build-essential \
    make \
    gcc \
    g++ \
    xutils-dev \
    pandoc \
    python-dev \ 
    python-pygments \
    python-zmq \
    python-pip

# ipython notebook and bokeh
RUN     pip install --upgrade pip
RUN     apt-get install -y python-pip
RUN     pip install jupyter
RUN     pip install bokeh

# enable parallel computing
RUN     pip install ipyparallel
RUN     jupyter notebook --generate-config
RUN     sed -i "/# Configuration file for jupyter-notebook./a  \ 
                c.NotebookApp.password = u'sha1:e008edc6061d:7960c7798fffe65531a2073e85e219e3fd61f3d0'" \
                /root/.jupyter/jupyter_notebook_config.py

# install python environment for crc scripts
RUN     apt-get install -y python-numpy python-scipy \
         python-gdal python-matplotlib libgdal-dev gdal-bin python-shapely \
         python-opencv

# install *latest* mlpy (with MaximumLikelihoodC and LibSvm)
RUN     apt-get install -y libgsl0-dev
ADD     mlpy-3.5.0 /mlpy-3.5.0
WORKDIR /mlpy-3.5.0
RUN     python setup.py install

# package imported by auxil package (but not used)
RUN     apt-get install -y python-tk 

# setup the prov_means library
COPY    prov_means.c /home/prov_means.c
WORKDIR /home
RUN     gcc -shared -Wall -g -o libprov_means.so -fPIC prov_means.c
RUN     cp libprov_means.so /usr/lib/libprov_means.so

# setup for earthengine
RUN     pip install --upgrade setuptools && \
        pip install google-api-python-client && \
        pip install pyCrypto && \
        apt-get install -y libssl-dev
RUN     pip install earthengine-api
ADD     Crypto /home/Crypto
ADD     ee /home/ee
ADD     httplib2 /home/httplib2
ADD     oauth2client /home/oauth2client

# ipython notebook startup script
ADD     notebook.sh /
RUN     chmod u+x /notebook.sh

EXPOSE 8888

# install auxil
COPY    dist/auxil-1.1.tar.gz /home/auxil-1.1.tar.gz
RUN     tar -xzvf auxil-1.1.tar.gz
WORKDIR /home/auxil-1.1
RUN     python setup.py install  
WORKDIR /home
RUN     rm -rf auxil-1.1
RUN     rm auxil-1.1.tar.gz

# textbook scripts and images
ADD     Scripts /home/Scripts
ADD     Images  /home/Images
COPY    normalize /home/normalize
COPY    c-correction.sh /home/c-correction.sh

WORKDIR /home  
CMD     ["/notebook.sh"]
